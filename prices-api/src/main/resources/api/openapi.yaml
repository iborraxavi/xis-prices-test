openapi: 3.0.3
info:
  title: Price API
  description: |-
    This is an Price API specification
  termsOfService: http://swagger.io/terms/
  contact:
    email: xavi.iborra.95@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080
tags:
  - name: price
    description: Price operations

paths:
  /prices:
    get:
      tags:
        - price
      summary: Prices search
      description: prices search
      operationId: prices
      parameters:
        - $ref: '#/components/parameters/ApplicationDate'
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/BrandId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesSearchResponse'
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:

  parameters:
    ApplicationDate:
      name: applicationDate
      in: query
      description: 'The application date that needs to be fetched.'
      required: true
      schema:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"
    ProductId:
      name: productId
      in: query
      description: 'The product id that needs to be fetched.'
      required: true
      schema:
        type: integer
        format: int64
        example: 35455
        minimum: 1
    BrandId:
      name: brandId
      in: query
      description: 'The brand id that needs to be fetched.'
      required: true
      schema:
        type: integer
        format: int32
        example: 1
        minimum: 1

  schemas:
    PricesSearchResponse:
      type: object
      properties:
        productId:
          description: Product id
          type: integer
          format: int64
          example: 35455
        brandId:
          description: Brand id
          type: integer
          format: int32
          example: 1
        priceList:
          description: Price list
          type: integer
          format: int32
          example: 1
        startDate:
          type: string
          format: date-time
          example: "2017-07-21T17:32:28Z"
          description: Start date
        endDate:
          type: string
          format: date-time
          example: "2017-07-21T17:32:28Z"
          description: End date
        price:
          description: Price
          type: number
          format: double
          example: 35.50
      required:
        - productId
        - brandId
        - priceList
        - startDate
        - endDate
        - price

    Error:
      type: object
      properties:
        code:
          type: string
          example: 400
        message:
          type: string
          example: Bad request error
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintViolation'
    ConstraintViolation:
      type: object
      properties:
        field:
          type: string
          example: search.searchId
        message:
          type: string
          example: Field is required